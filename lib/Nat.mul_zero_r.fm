Nat.mul_zero_r
: {a : (Nat a)} (Eq Nat (Nat.mul a Nat.zero) Nat.zero (Nat.mul_zero_r a))
= [a]
  let motive [self]
    (Eq Nat (Nat.mul self Nat.zero) Nat.zero (Nat.mul_zero_r self))
  let case_succ [a]
    (Eq.cong Nat Nat (Nat.mul a Nat.zero) Nat.zero (Nat.mul_zero_r a) (Nat.add Nat.zero))
  let case_zero
    (Eq.refl Nat Nat.zero)
  (a -motive case_succ case_zero)
