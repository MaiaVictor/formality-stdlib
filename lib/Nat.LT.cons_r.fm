Nat.LT.cons_r
: {a : (Nat a)} {b : (Nat b)} {x : (Nat x)} {e : (Eq Nat (Nat.add x a) b e)} (Nat.LT a b (Nat.LT.cons_r a b x e))
= [a] [b] [x] [e]
  (Sigma.new Nat [x : (Nat x)] (Eq Nat (Nat.add a x) b) x (trans Nat (Nat.add a x) (Nat.add x a) b (Nat.add_comm a x) e))
