Nat.LT.dec_step
: {a : (Nat a)} {b : (Nat b)} {e : (Dec (Nat.LT a b) e)}
  (Dec (Nat.LT (Nat.succ a) (Nat.succ b)) (Nat.LT.dec_step a b e))
= [a] [b] [e]
  let motive_dec [self]
    (Dec (Nat.LT (Nat.succ a) (Nat.succ b)) (Nat.LT.dec_step a b self))
  let case_true [p : (Nat.LT a b p)]
    (Dec.true (Nat.LT (Nat.succ a) (Nat.succ b)) (Nat.LT.succ_monotone a b p))
  let case_false [n : (Not (Nat.LT a b) n)] 
    (Dec.false (Nat.LT (Nat.succ a) (Nat.succ b))
      [p : (Nat.LT (Nat.succ a) (Nat.succ b) p)] (n (Nat.LT.succ_strict a b p)))
  (e -motive_dec case_true case_false)
